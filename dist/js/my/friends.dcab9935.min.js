webpackJsonp([8],{

/***/ 0:
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(38);


/***/ }),

/***/ 5:
/***/ (function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/

	var stylesInDom = {};

	var	memoize = function (fn) {
		var memo;

		return function () {
			if (typeof memo === "undefined") memo = fn.apply(this, arguments);
			return memo;
		};
	};

	var isOldIE = memoize(function () {
		// Test for IE <= 9 as proposed by Browserhacks
		// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
		// Tests for existence of standard globals is to allow style-loader
		// to operate correctly into non-standard environments
		// @see https://github.com/webpack-contrib/style-loader/issues/177
		return window && document && document.all && !window.atob;
	});

	var getElement = (function (fn) {
		var memo = {};

		return function(selector) {
			if (typeof memo[selector] === "undefined") {
				memo[selector] = fn.call(this, selector);
			}

			return memo[selector]
		};
	})(function (target) {
		return document.querySelector(target)
	});

	var singleton = null;
	var	singletonCounter = 0;
	var	stylesInsertedAtTop = [];

	var	fixUrls = __webpack_require__(6);

	module.exports = function(list, options) {
		if (false) {
			if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}

		options = options || {};

		options.attrs = typeof options.attrs === "object" ? options.attrs : {};

		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (!options.singleton) options.singleton = isOldIE();

		// By default, add <style> tags to the <head> element
		if (!options.insertInto) options.insertInto = "head";

		// By default, add <style> tags to the bottom of the target
		if (!options.insertAt) options.insertAt = "bottom";

		var styles = listToStyles(list, options);

		addStylesToDom(styles, options);

		return function update (newList) {
			var mayRemove = [];

			for (var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];

				domStyle.refs--;
				mayRemove.push(domStyle);
			}

			if(newList) {
				var newStyles = listToStyles(newList, options);
				addStylesToDom(newStyles, options);
			}

			for (var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];

				if(domStyle.refs === 0) {
					for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

					delete stylesInDom[domStyle.id];
				}
			}
		};
	};

	function addStylesToDom (styles, options) {
		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			if(domStyle) {
				domStyle.refs++;

				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}

				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];

				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}

				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}

	function listToStyles (list, options) {
		var styles = [];
		var newStyles = {};

		for (var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = options.base ? item[0] + options.base : item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};

			if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
			else newStyles[id].parts.push(part);
		}

		return styles;
	}

	function insertStyleElement (options, style) {
		var target = getElement(options.insertInto)

		if (!target) {
			throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
		}

		var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

		if (options.insertAt === "top") {
			if (!lastStyleElementInsertedAtTop) {
				target.insertBefore(style, target.firstChild);
			} else if (lastStyleElementInsertedAtTop.nextSibling) {
				target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				target.appendChild(style);
			}
			stylesInsertedAtTop.push(style);
		} else if (options.insertAt === "bottom") {
			target.appendChild(style);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}

	function removeStyleElement (style) {
		if (style.parentNode === null) return false;
		style.parentNode.removeChild(style);

		var idx = stylesInsertedAtTop.indexOf(style);
		if(idx >= 0) {
			stylesInsertedAtTop.splice(idx, 1);
		}
	}

	function createStyleElement (options) {
		var style = document.createElement("style");

		options.attrs.type = "text/css";

		addAttrs(style, options.attrs);
		insertStyleElement(options, style);

		return style;
	}

	function createLinkElement (options) {
		var link = document.createElement("link");

		options.attrs.type = "text/css";
		options.attrs.rel = "stylesheet";

		addAttrs(link, options.attrs);
		insertStyleElement(options, link);

		return link;
	}

	function addAttrs (el, attrs) {
		Object.keys(attrs).forEach(function (key) {
			el.setAttribute(key, attrs[key]);
		});
	}

	function addStyle (obj, options) {
		var style, update, remove, result;

		// If a transform function was defined, run it on the css
		if (options.transform && obj.css) {
		    result = options.transform(obj.css);

		    if (result) {
		    	// If transform returns a value, use that instead of the original css.
		    	// This allows running runtime transformations on the css.
		    	obj.css = result;
		    } else {
		    	// If the transform function returns a falsy value, don't add this css.
		    	// This allows conditional loading of css
		    	return function() {
		    		// noop
		    	};
		    }
		}

		if (options.singleton) {
			var styleIndex = singletonCounter++;

			style = singleton || (singleton = createStyleElement(options));

			update = applyToSingletonTag.bind(null, style, styleIndex, false);
			remove = applyToSingletonTag.bind(null, style, styleIndex, true);

		} else if (
			obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function"
		) {
			style = createLinkElement(options);
			update = updateLink.bind(null, style, options);
			remove = function () {
				removeStyleElement(style);

				if(style.href) URL.revokeObjectURL(style.href);
			};
		} else {
			style = createStyleElement(options);
			update = applyToTag.bind(null, style);
			remove = function () {
				removeStyleElement(style);
			};
		}

		update(obj);

		return function updateStyle (newObj) {
			if (newObj) {
				if (
					newObj.css === obj.css &&
					newObj.media === obj.media &&
					newObj.sourceMap === obj.sourceMap
				) {
					return;
				}

				update(obj = newObj);
			} else {
				remove();
			}
		};
	}

	var replaceText = (function () {
		var textStore = [];

		return function (index, replacement) {
			textStore[index] = replacement;

			return textStore.filter(Boolean).join('\n');
		};
	})();

	function applyToSingletonTag (style, index, remove, obj) {
		var css = remove ? "" : obj.css;

		if (style.styleSheet) {
			style.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = style.childNodes;

			if (childNodes[index]) style.removeChild(childNodes[index]);

			if (childNodes.length) {
				style.insertBefore(cssNode, childNodes[index]);
			} else {
				style.appendChild(cssNode);
			}
		}
	}

	function applyToTag (style, obj) {
		var css = obj.css;
		var media = obj.media;

		if(media) {
			style.setAttribute("media", media)
		}

		if(style.styleSheet) {
			style.styleSheet.cssText = css;
		} else {
			while(style.firstChild) {
				style.removeChild(style.firstChild);
			}

			style.appendChild(document.createTextNode(css));
		}
	}

	function updateLink (link, options, obj) {
		var css = obj.css;
		var sourceMap = obj.sourceMap;

		/*
			If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
			and there is no publicPath defined then lets turn convertToAbsoluteUrls
			on by default.  Otherwise default to the convertToAbsoluteUrls option
			directly
		*/
		var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

		if (options.convertToAbsoluteUrls || autoFixUrls) {
			css = fixUrls(css);
		}

		if (sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}

		var blob = new Blob([css], { type: "text/css" });

		var oldSrc = link.href;

		link.href = URL.createObjectURL(blob);

		if(oldSrc) URL.revokeObjectURL(oldSrc);
	}


/***/ }),

/***/ 6:
/***/ (function(module, exports) {

	
	/**
	 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
	 * embed the css on the page. This breaks all relative urls because now they are relative to a
	 * bundle instead of the current page.
	 *
	 * One solution is to only use full urls, but that may be impossible.
	 *
	 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
	 *
	 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
	 *
	 */

	module.exports = function (css) {
	  // get current location
	  var location = typeof window !== "undefined" && window.location;

	  if (!location) {
	    throw new Error("fixUrls requires window.location");
	  }

		// blank or null?
		if (!css || typeof css !== "string") {
		  return css;
	  }

	  var baseUrl = location.protocol + "//" + location.host;
	  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");

		// convert each url(...)
		/*
		This regular expression is just a way to recursively match brackets within
		a string.

		 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
		   (  = Start a capturing group
		     (?:  = Start a non-capturing group
		         [^)(]  = Match anything that isn't a parentheses
		         |  = OR
		         \(  = Match a start parentheses
		             (?:  = Start another non-capturing groups
		                 [^)(]+  = Match anything that isn't a parentheses
		                 |  = OR
		                 \(  = Match a start parentheses
		                     [^)(]*  = Match anything that isn't a parentheses
		                 \)  = Match a end parentheses
		             )  = End Group
	              *\) = Match anything and then a close parens
	          )  = Close non-capturing group
	          *  = Match anything
	       )  = Close capturing group
		 \)  = Match a close parens

		 /gi  = Get all matches, not the first.  Be case insensitive.
		 */
		var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(fullMatch, origUrl) {
			// strip quotes (if they exist)
			var unquotedOrigUrl = origUrl
				.trim()
				.replace(/^"(.*)"$/, function(o, $1){ return $1; })
				.replace(/^'(.*)'$/, function(o, $1){ return $1; });

			// already a full url? no change
			if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(unquotedOrigUrl)) {
			  return fullMatch;
			}

			// convert the url to a full url
			var newUrl;

			if (unquotedOrigUrl.indexOf("//") === 0) {
			  	//TODO: should we add protocol?
				newUrl = unquotedOrigUrl;
			} else if (unquotedOrigUrl.indexOf("/") === 0) {
				// path should be relative to the base url
				newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
			} else {
				// path should be relative to current directory
				newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
			}

			// send back the fixed url(...)
			return "url(" + JSON.stringify(newUrl) + ")";
		});

		// send back the fixed css
		return fixedCss;
	};


/***/ }),

/***/ 26:
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var user = __webpack_require__(27)
	    , _user = user._user
	    , _f = user._f;

	// 导航
	var nav = {
	    init: function () {

	        this.bindEvent();
	        this.loadUserInfo();
	        this.loginTimeout();

	        return this;
	    },
	    loginTimeout: function () {
	        //登录超时20分钟
	        var setout = 20 * 60 * 1000;
	        var myTime = setTimeout(function () { timeOut(); }, setout);
	        top.layerout = {};
	        top.layerout.resetTime = function () {
	            clearTimeout(myTime);
	            myTime = setTimeout(function () { timeOut(); }, setout);
	        }

	        function timeOut() {
	            _user.logout();
	            alert('您已超时 请重新登录')
	            //window.location.reload();
	        }

	        $(document).off();

	        $(document).keydown(function (event) {
	            top.layerout.resetTime();
	        }).click(function (event) {
	            top.layerout.resetTime();
	        });
	    },
	    bindEvent: function () {
	        var _this = this;

	        if (navigator.userAgent.toLowerCase().indexOf('chrome') >= 0) {
	            $('input').autocomplete = 'off';
	        }

	        _this.scrollEvent();

	        // 登录点击事件
	        $('.js-login').click(function () {
	            _f.doLogin();
	        });
	        // 注册点击事件
	        $('.js-register').click(function () {
	            window.location.href = './user-register.html';
	        });
	        // 退出点击事件
	        $('.js-logout').click(function () {
	            _user.logout(function (res) {
	                window.location.reload();
	            }, function (errMsg) {
	                _f.errorTips(errMsg);
	            });
	        });
	    },
	    scrollEvent: function () {
	        var nav = $('.wdg-fjw-second-header');
	        $(window).bind("scroll", function () {
	            var t = $(window).scrollTop();
	            if (t > 100) {
	                nav.addClass("nav-hold");
	            } else {
	                nav.removeClass("nav-hold")
	            }
	        });
	    },
	    // 加载用户信息
	    loadUserInfo: function () {

	        var $header = $('.site-nav'),
	            $isLogin = $('.F_isLogin'),
	            $unLogin = $('.F_unLogin'),
	            $userIcon = $('.F_userIcon'),
	            $userPhone = $('.F_userPhone'),
	            $logout = $('.F_out');

	        //window.localStorage.getItem('f_ui_cache')
	        if (_f.cookie.get('F.token')) {

	            var user = JSON.parse(_f.storage.getItem('f_ui_cache'));

	            var html = ['<a href="https://www.lmlc.com/web/page/login/fund/overview.html?from=home_nav" target="_blank">您好，' + user.member.phone
	                + "&nbsp;&nbsp;</a>", '<a class="F_out" href="javascript:;">退出</a>'].join("");

	            $logout.show();
	            $unLogin.hide();
	            $isLogin.html(html).show();
	            $userPhone.html(user.member.phone);
	            $userIcon.attr('src', user.member.headPhoto);

	            _f.cache.isLogin = true;
	            _f.cache.glb_user_phone = user.member.phone;
	            _f.cache.glb_user_avator = user.member.headPhoto;
	            _f.cache.glb_user_token = _f.cookie.get('F.token');

	        } else {
	            $unLogin.css({
	                visibility: 'visible'
	            });
	            $logout.hide();
	            $isLogin.hide();
	            $userPhone.html('尊敬的用户');

	            _f.cache.isLogin = false;
	            _f.cache.glb_user_token = '';
	            _f.cache.glb_user_phone = '';
	            _f.cache.glb_user_avator = '';
	        }
	    }
	};
	nav.init();
	module.exports = {
	    _f: _f,
	    _user: _user
	};

/***/ }),

/***/ 27:
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _f = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"../lib/fjw.js\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _user = {
	    // 用户登录
	    login : function(userInfo, resolve, reject){
	        _f.request({
	            url     : _f.config.serverHost,
	            data    : userInfo,
	            method  : 'POST',
	            success : resolve,
	            error   : reject
	        });
	    },
	    // 检查手机号是否注册
	    checkExistPhone :function(phone,resolve,reject){
	        _f.request({
	            url     : _f.config.serverHost,
	            data    : {
	                type    : 'phone',
	                str     : phone
	            },
	            method  : 'POST',
	            success : resolve,
	            error   : reject
	        });
	    },
	    // 用户注册
	    register : function(userInfo, resolve, reject){
	        _f.request({
	            url     : _f.config.serverHost,
	            data    : userInfo,
	            method  : 'POST',
	            success : resolve,
	            error   : reject
	        });
	    },
	    // 检查登录状态
	    checkLogin : function(){
	        if (!_f.cookie.get('F.token')) {
	           //_f.goHome();
	        }
	    },
	    // 重置密码
	    resetPassword : function(userInfo, resolve, reject){
	        _f.request({
	            url     : _f.config.serverHost,
	            data    : userInfo,
	            method  : 'POST',
	            success : resolve,
	            error   : reject
	        });
	    },
	    // 获取用户信息
	    getUserInfo : function(resolve, reject){
	        _f.request({
	            url     : _f.config.serverHost,
	            method  : 'POST',
	            success : resolve,
	            error   : reject
	        });
	    },
	    // 更新个人信息
	    updateUserInfo : function(userInfo, resolve, reject){
	        _f.request({
	            url     : _f.config.serverHost,
	            data    : userInfo,
	            method  : 'POST',
	            success : resolve,
	            error   : reject
	        });
	    },
	    // 登录状态下更新密码
	    updatePassword : function(userInfo, resolve, reject){
	        _f.request({
	            url     : _f.config.serverHost,
	            data    : userInfo,
	            method  : 'POST',
	            success : resolve,
	            error   : reject
	        });
	    },
	    // 登出
	    logout : function(resolve, reject){
	        _f.request({
	            url     : _f.config.serverHost,
	            method  : 'POST',
	            success : resolve,
	            error   : reject
	        });
	        
	        _f.cookie.remove('F.token');
	        _f.cookie.remove('F.phone');
	        _f.cookie.remove('F.avator');

	    },
	    getUserInfo:function(){
	        
	    }
	}
	module.exports = {
	    _user   : _user,
	    _f      : _f
	};
	_user.checkLogin();

/***/ }),

/***/ 38:
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	__webpack_require__(39);
	__webpack_require__(41);
	__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"../lib/simplePageination/jquery.simplePagination.js\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var template = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"../lib/template/template.js\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()))
	var _header = __webpack_require__(26),
	    _f = _header._f;

	var myFriend = {
		pageObj : [
			{
				pageTotal:0,
				currentPage:1,
				pageType:0,
				dataArray:[]
			},
			{
				pageTotal:0,
				currentPage:1,
				pageType:1,
				dataArray:[]
			},
			{
				pageTotal:0,
				currentPage:1,
				pageType:2,
				dataArray:[]
			}
		],
		pageTypeId:0,

		init : function(){
			var s = this;
			$('.my-friends-listAll').hide();
			$('#loadImg').hide();
			s.getFriendList(s.pageObj[0].currentPage,10,s.pageObj[0].pageType,false);
			$('.my-friends-nav li').click(function(e){
				if($(this).css('cursor')!='default'){
					$('.my-friends-nav li').css('cursor','pointer');
					$('.my-friends-nav li').removeClass('active');
					var id = 0;
					switch($(this).text()){
						case "全部":
							$(this).css('cursor','default');
							$(this).addClass('active');
							id = 0;
							break;
						case "已邀请":
							$(this).css('cursor','default');
							$(this).addClass('active');
							id = 2;
							break;
						case "邀请成功":
							$(this).css('cursor','default');
							$(this).addClass('active');
							id = 1;
							break;
					}
					s.pageTypeId = id;
					var pageObj = s.pageObj[id]
					if(pageObj.dataArray.length == 0){
						s.getFriendList(pageObj.currentPage,10,pageObj.pageType,false);
					}else {
						s.setPaginator();
						for(var i=0;i<pageObj.dataArray.length;i++){
							if(pageObj.dataArray[i].id == pageObj.currentPage){
								s.createList(pageObj.dataArray[i].data);
								return;
							}
						}
						//console.log(s.pageObj[id].dataArray);
					}
				}
			})
		},
		getFriendList : function(pageId,pageNum,num,isChange){
			$('#loadImg').show();
			var s = this;
			var param = {
				pageIndex:pageId,
				pageSize:pageNum,
				Type:num
			};
			var req = {
				M: _f.config.apiMethod.getFriendList,
	            D: JSON.stringify(param)
			};
			 _f.request({
	            url: _f.config.serverHost,
	            data: JSON.stringify(req),
	            method: 'POST',
	            success: function (res) {
	            	$('#loadImg').hide();
	                var data = JSON.parse(res);
	                var pageObj =  s.pageObj[s.pageTypeId];
	               	pageObj.pageTotal = data.total;
	                $('.my-friends-listAll').empty();
	                //console.log(data);
	                if(!isChange)s.setPaginator();
	                if(data.grid.length > 0){
	                	pageObj.dataArray.push({id:pageObj.currentPage,data:data});
	                	s.createList(data);
	                }else{
	                	$('.my-friends-listAll').hide();
	                	$('.my-friends-bottom').text('暂时还没有信息哦！');
	                }
	            },
	            error: function () {
	            	$('#loadImg').hide();
	            },
	            hideLoading: function(){
	            	$('#loadImg').hide();
	            }
	        });
		},
		createList : function(data){
			$('.my-friends-listAll').show();
	        var tpl = "<%for(i = 0; i< grid.length; i++){%>"+
	                	"<div class='my-friends-Item'>"+
	                		"<ul>"+
	                			"<% var data = grid[i];%>"+
	                			"<li> <%=data.friendPhone%> </li>"+
	                			"<li class='textCenter'> <%=data.time%> </li>"+
	                			"<li class='ItemRight'> <%=data.statusText%> </li>"+
	                		"</ul>"+
	                	"</div>"+
	                "<%}%>"	
	        var html = template(tpl, data);
	        $('.my-friends-listAll').html(html);
	        $('#msg').hide();
		},
		setPaginator : function(){
			var pageObj = this.pageObj[this.pageTypeId];
			console.log(pageObj.pageTotal);
			$('#paginator').pagination('destroy');
			$("#paginator").pagination({
	                items: pageObj.pageTotal,
	                itemsOnPage: 1,
	                displayedPages:3,
	                prevText:'<',
	                nextText:'>',
	                cssStyle:'light-theme',
	                onPageClick: this.changePage,
	                currentPage:pageObj.currentPage
	          	});
		},
		changePage : function(pageId,e){
			var pageObj = myFriend.pageObj[myFriend.pageTypeId];
			for(var i=0;i<pageObj.dataArray.length;i++){
				if(pageObj.dataArray[i].id == pageId){
					pageObj.currentPage = pageId;
					myFriend.createList(pageObj.dataArray[i].data);
					return;
				}
			}
			pageObj.currentPage = pageId;
			myFriend.getFriendList(pageObj.currentPage,10,pageObj.pageType,true);
		}
	}

	$(function () {
	    myFriend.init();
	})

/***/ }),

/***/ 39:
/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ }),

/***/ 41:
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"!!../../../../node_modules/css-loader/index.js!./simplePagination.css\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));
	if(typeof content === 'string') content = [[module.id, content, '']];
	// Prepare cssTransformation
	var transform;

	var options = {}
	options.transform = transform
	// add the styles to the DOM
	var update = __webpack_require__(5)(content, options);
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../../node_modules/css-loader/index.js!./simplePagination.css", function() {
				var newContent = require("!!../../../../node_modules/css-loader/index.js!./simplePagination.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ })

});